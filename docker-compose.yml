version: '3.2'

services:
  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - database
      - api
      - web
    stdin_open: true
    tty: true
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.template
    command:
      [
          "/bin/bash",
          "-c",
          "export PROJECT_API_PORT && export PROJECT_WEB_PORT && envsubst '$$PROJECT_API_PORT $$PROJECT_WEB_PORT' < /etc/nginx/nginx.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
      ]
    environment:
      - PROJECT_API_PORT=${PROJECT_API_PORT}
      - PROJECT_WEB_PORT=${PROJECT_WEB_PORT}
    ports:
      - "80:80"
    external_links:
      - api:api.loc
      - web:web.loc
    networks:
      general:
        aliases:
          - nginx

  migration:
    build: ./docker/migrate
    container_name: migration
    depends_on:
      - database
      - api
      - web
    stdin_open: true
    tty: true
    working_dir: /migrations
    volumes:
      - ./app/api/migrations:/migrations
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database.loc:5432/${POSTGRES_DB}?sslmode=disable
      - POSTGRES_URL_TEST=postgres://${POSTGRES_USER_TEST}:${POSTGRES_PASSWORD_TEST}@database.loc:5432/${POSTGRES_DB_TEST}?sslmode=disable
    external_links:
      - database:database.loc
    networks:
      general:
        aliases:
          - migration

  web:
    image: golang
    container_name: web
    depends_on:
      - database
      - api
    stdin_open: true
    tty: true
    working_dir: /go/src/app
    volumes:
      - ./app/web:/go/src/app
    environment:
      - PROJECT_WEB_PORT=${PROJECT_WEB_PORT}
    external_links:
      - database:database.loc
    networks:
      general:
        aliases:
          - web

  api:
    image: golang
    container_name: api
    depends_on:
      - database
    stdin_open: true
    tty: true
    working_dir: /go/src/app
    volumes:
      - ./app/api:/go/src/app
    environment:
      - HTTP_PORT=${PROJECT_API_PORT}
      - LOGGER_LEVEL=${API_LOGGER_LEVEL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_USER_TEST=${POSTGRES_USER_TEST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PASSWORD_TEST=${POSTGRES_PASSWORD_TEST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_DB_TEST=${POSTGRES_DB_TEST}
    external_links:
      - database:database.loc
    networks:
      general:
        aliases:
          - api

  database:
    image: postgres
    container_name: database
    volumes:
      - ./docker/postgres/01_create_test_db.sh:/docker-entrypoint-initdb.d/01_create_test_db.sh
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_USER_TEST=${POSTGRES_USER_TEST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PASSWORD_TEST=${POSTGRES_PASSWORD_TEST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_DB_TEST=${POSTGRES_DB_TEST}
    ports:
      - "${DATABASE_EXTERNAL_PORT}:5432"
    networks:
      general:
        aliases:
          - database

networks:
  general: